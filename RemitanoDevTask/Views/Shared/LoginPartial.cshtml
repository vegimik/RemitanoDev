@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@inject SignInManager<IdentityUser> SignInManager

@if (SignInManager.IsSignedIn(User))
{
    <ul class="navbar-nav">
        @await Component.InvokeAsync("UserSummary")
        @if (User.Identity.IsAuthenticated)
        {
            @if (User.IsInRole("UserMember"))
            {
        <li class="nav-item">
            @*<button class="btn btn-outline-success my-2 my-sm-0" type="submit">Share a movie</button>*@
            <a class="btn btn-outline-success my-2 my-sm-0" asp-controller="Movies" asp-action="Create">Share a movie</a>
        </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="UserRegistered" asp-action="Index">My profile</a>
                </li>
            }
        }

        <form asp-area="" asp-controller="Account" asp-action="Logout" id="logoutForm"
              method="post" class="navbar-right">
            <li class="nav-item">
                <a class="nav-link" href="javascript:document.getElementById('logoutForm').submit()">Log off</a>
            </li>
        </form>
    </ul>

}
else
{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Login">Log in</a>
        </li>
    </ul>

}

